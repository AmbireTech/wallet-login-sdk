{"version":3,"file":"ambire-login-sdk.cjs.development.js","sources":["../src/connector.ts"],"sourcesContent":["import { Actions, Connector } from '@web3-react/types'\nimport { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\nimport { ConnectionInfo } from \"@ethersproject/web\";\nimport { Networkish } from '@ethersproject/networks'\n\nexport class AmbireWallet extends Connector {\n  _sdk: any\n\n  constructor(actions: Actions, options: any, onError?: (error: Error) => void) {\n    super(actions, onError)\n    this._sdk = new window.AmbireSDK(options)\n  }\n\n  activate(chainInfo: any): Promise<void> | void {\n    this.actions.startActivation()\n    this._sdk.openLogin(chainInfo)\n\n    return new Promise((resolve) => {\n      this._sdk.onAlreadyLoggedIn((data: any) => {\n        const activeChainId = chainInfo ? parseInt(chainInfo.chainId) : parseInt(data.chainId)\n        this.customProvider = this.getProvider(data.address, data.providerUrl)\n        this.actions.update({ chainId: activeChainId, accounts: [data.address] })\n        resolve()\n      })\n      this._sdk.onLoginSuccess((data: any) => {\n        const activeChainId = chainInfo ? parseInt(chainInfo.chainId) : parseInt(data.chainId)\n        this.customProvider = this.getProvider(data.address, data.providerUrl)\n        this.actions.update({ chainId: activeChainId, accounts: [data.address] })\n        resolve()\n      })\n      this._sdk.onRegistrationSuccess((data: any) => {\n        const activeChainId = chainInfo ? chainInfo.chainId : data.chainId\n        this.customProvider = this.getProvider(data.address, data.providerUrl)\n        this.actions.update({ chainId: activeChainId, accounts: [data.address] })\n        resolve()\n      })\n    })\n  }\n\n  deactivate(): Promise<void> | void {\n    this._sdk.openLogout()\n\n    return new Promise((resolve) => {\n      this._sdk.onLogoutSuccess(() => {\n        this.customProvider = null\n        this.actions.resetState()\n        resolve()\n      })\n    })\n  }\n\n  getProvider(address: string, providerUrl: string): AmbireProvider {\n    return new AmbireProvider(this._sdk, address, providerUrl)\n  }\n}\n\nclass AmbireProvider extends JsonRpcProvider {\n  _address: string\n  _sdk: any\n\n  constructor(sdk: any, address: string, url?: ConnectionInfo | string, network?: Networkish) {\n    super(url, network)\n    this._address = address\n    this._sdk = sdk\n  }\n\n  getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n    const signerAddress = addressOrIndex ? addressOrIndex : this._address\n    const signer = super.getSigner(signerAddress)\n    const provider = this\n\n    const handler1 = {\n      get(target: any, prop: any, receiver: any) {\n        if (prop === 'sendTransaction') {\n          const value = target[prop]\n          if (value instanceof Function) {\n            return function (...args: any) {\n              const txn = args.data ? args : args[0]\n              provider._sdk.openSendTransaction(txn.to, txn.value ?? '0', txn.data)\n\n              return new Promise((resolve, reject) => {\n                provider._sdk.onTxnSent(async (data: any) => {\n                  const hash = data.hash\n                  const tx = await provider.getTransaction(hash)\n                  const response = provider._wrapTransaction(tx, hash)\n                  response.data = txn.data\n                  return resolve(response)\n                })\n                provider._sdk.onTxnRejected(() => {\n                  reject({ code: 4001 })\n                })\n              })\n            }\n          }\n        }\n\n        if (prop === 'connectUnchecked') {\n          const value = target[prop]\n          if (value instanceof Function) {\n            return function () {\n              return new Proxy(signer, handler1)\n            }\n          }\n        }\n\n        if (prop === 'signMessage' || prop === '_legacySignMessage' || prop === '_signTypedData') {\n          const value = target[prop]\n          if (value instanceof Function) {\n            return function (...args: any) {\n              const type =\n                prop === 'signMessage'\n                  ? 'personal_sign'\n                  : prop === '_legacySignMessage'\n                  ? 'eth_sign'\n                  : 'eth_signTypedData_v4'\n              return provider.handleMsgSign(type, args)\n            }\n          }\n        }\n\n        return Reflect.get(target, prop, receiver)\n      },\n    }\n\n    return new Proxy(signer, handler1)\n  }\n\n  handleMsgSign(type: string, args: any) {\n    const message = args.length === 1 ? args[0] : args\n    this._sdk.openSignMessage(type, message)\n\n    return new Promise((resolve, reject) => {\n      this._sdk.msgSigned(() => {\n        return resolve(args[0])\n      })\n      this._sdk.onMsgRejected(() => {\n        reject({ code: 4001 })\n      })\n    })\n  }\n}"],"names":["AmbireWallet","Connector","constructor","actions","options","onError","_sdk","window","AmbireSDK","activate","chainInfo","startActivation","openLogin","Promise","resolve","onAlreadyLoggedIn","data","activeChainId","parseInt","chainId","customProvider","getProvider","address","providerUrl","update","accounts","onLoginSuccess","onRegistrationSuccess","deactivate","openLogout","onLogoutSuccess","resetState","AmbireProvider","JsonRpcProvider","sdk","url","network","_address","getSigner","addressOrIndex","signerAddress","signer","provider","handler1","get","target","prop","receiver","value","Function","args","txn","openSendTransaction","to","reject","onTxnSent","hash","tx","getTransaction","response","_wrapTransaction","onTxnRejected","code","Proxy","type","handleMsgSign","Reflect","message","length","openSignMessage","msgSigned","onMsgRejected"],"mappings":"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"}